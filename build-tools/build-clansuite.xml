<?xml version="1.0" encoding="UTF-8"?>
<!--
    Clansuite - Phing Build File

    This build file handles:
    1. deployment tasks: release building
    2. developer tasks: building the manuals and API documentation, running unittests

    Phing Handbook:     http://phing.info/docs/guide/current/

    Requirements:
    Phing
    phpDocumentor
    phpxref

    Version:  $Id$
-->
<project name="Clansuite" description="Clansuite Build File" basedir="." default="help">

    <!-- ======================================== -->
    <!-- ======        Properties & General Settings   ====== -->
    <!-- ======================================== -->

    <!-- Define Common Properties for all Build Commands | make constants -->
    <property name="build.base.directory" value="build"/> <!-- name of the build directory -->
    <property name="clansuite_version" value="0.2" override="true" /> <!-- version number -->
    <property name="clansuite_version_state" value="alpha-dev" override="true" /> <!-- version state -->
    <property name="clansuite_version_name" value="Trajan" override="true" /> <!-- version state -->

    <!-- Define Fileset  -->
        <fileset id="clansuite_projectfiles" dir="./"> <!-- based on trunk -->
            <include name="**" /> <!-- all files -->
            <exclude name="build-tools" /> <!-- exclude build-tools directory -->
            <exclude name="tests" /> <!-- exclude tests directory -->
            <exclude name="tmp" /> <!-- exclude temporary directory -->
            <exclude name=".htaccess"/> <!-- exclude local htaccess -->
        </fileset>

    <!-- COMMAND = "help" -->
    <!-- Displays a helptext for the Phing Build Commands avaiable -->
    <target name="help">
        <echo>

        Welcome to the Clansuite build script!
        --------------------------------------
        Use the following syntax to trigger a build command:

                  phing   &lt;build command&gt;

        where &lt;build command&gt; can be one of the following:

        List of Clansuite Build Commands:
        - help      : guess what, displays this help text
        - all       : do all build steps (lint, docs, tar/zip)
        - all_docs  : generate documentation (phpxref, phpdoc, doxygen)
        - dist      : create release files
        - build     : prepare a directory for distribution
        - mrproper  : clean up the build directory
        - rebuild   : clean first and then build
        - translate : search files for strings2translate
        -
        - run_tests : runs simpletest testsuite
        </echo>
    </target>

    <!-- ======================================== -->
    <!-- ======        Deployment Tasks       ====== -->
    <!-- ======================================== -->

    <!-- COMMAND = "all" -->
    <!-- all phing-build commands in order -->
    <target name="all">
        <echo>------------------------------------------</echo>
        <echo msg="Building Clansuite ${clansuite_version} ${clansuite_version_state}" />
        <echo>------------------------------------------</echo>
        <phingcall target="lint" />
        <phingcall target="doc" />
        <phingcall target="tar" />
        <echo file="core/clansuite.version.php" append="false">
        <?php
            $clansuite_version       = '${clansuite_version}';
            $clansuite_version_state = '${clansuite_version_state}';
            $clansuite_version_name  = '${clansuite_version_name}';
         ?>
        </echo>
    </target>

    <!-- COMMAND = "mrproper"  -->
    <!-- cleans the Building Directories -->
    <target name="mrproper">
        <echo>Mr.Proper wipes the Building</echo>
        <delete dir="${build.base.directory}"/>
    </target>

    <!-- ======================================== -->
    <!-- ======        Documentation Tasks      ====== -->
    <!-- ======================================== -->

    <property name="documentations_dir" value="apidocs" override="true" />

    <!-- COMMAND = "all_docs" -->
    <!-- creates all developer documentations -->
    <target name="all_docs">
        <echo>-----------------------------------</echo>
 	    <echo>|   Creating ALL Documentations   |</echo>
	    <echo>-----------------------------------</echo>
        <phingcall target="doc_phpdoc" />
        <phingcall target="doc_doxygen" />
        <phingcall target="doc_phpxref" />
    </target>

    <!-- COMMAND = "generate_docs" -->
    <!-- creates all the documentations -->
    <target name="generate-docs">
        <!--
                Generates the API documentation using Doxygen and PHPDoc
                Doxygen is required in the path.
        -->

        <exec command="doxygen" dir="."/>
        <!-- <exec command="make pdf" dir="${build.src.dir}/docs/latex"/> -->
        <phpdoc title="Clansuite API PHPDocumentation"
                 destdir="${build.dest.dir}/docs/API/phpdoc/html"
                 sourcepath="${project.base.dir}/lib"
                 sourcecode="yes"
                 output="HTML:Smarty:PHP"/>
    </target>

    <!-- COMMAND = "doc_phpdoc" -->
    <!-- creates phpdocumentor documentation -->
    <property name="phpdoc_dir" value="phpdoc" override="true" />
    <target name="doc_phpdoc">
        <echo>- create phpdoc</echo>
        <delete dir="${documentations_dir}/${phpdoc_dir}" />
        <mkdir dir="${documentations_dir}/${phpdoc_dir}" />
        <exec command="c:\xampplite\htdocs\work\phpdocumentor\phpdoc -c c:/xampplite/htdocs/work/clansuite/doc/clansuite-phpdoc.ini -f c:/xampplite/htdocs/work/clansuite/trunk/*.php -t c:/xampplite/htdocs/work/clansuite/${documentations_dir}/${phpdoc_dir} > debug.txt"/>
    </target>

    <!-- ======================================== -->
    <!-- =======      Create Archives      ====== -->
    <!-- ======================================== -->

    <!-- Properties for the Archives -->
    <property name="archive_dir" value="archive" override="true" />
    <property name="archive_filename" value="clansuite-${version}" override="true" />

   <!-- COMMAND = "tar" -->
   <!-- Create Tar Archive -->
   <target name="tar">
 	    <mkdir dir="${archive_dir}" />
 	    <delete file="${archive_dir}/${archive_filename}.tgz" />
 	    <delete file="${archive_dir}/${archive_filename}.tgz.md5" />

 	    <tar destfile="${archive_dir}/${archive_filename}.tgz" compression="gzip">
 	        <fileset refid="projectfile" />
 	    </tar>

 	    <php function="md5_file" returnProperty="md5file">
 	        <param value="${archive_dir}/${archive_filename}.tgz"/>
 	    </php>

 	    <echo msg="${md5file}" file="${archive_dir}/${archive_filename}.tgz.md5"/>
    </target>

    <!-- COMMAND = "tar_doc" -->
    <!-- Create new Documentation Archive -->
    <target name="tar_doc">
        <delete file="${archive_dir}/${archive_filename}-doc.tgz" />
        <tar destfile="${archive_dir}/${archive_filename}-doc.tgz" compression="gzip">
	      <fileset id="docfile" dir="${docdir}">
	        <include name="**" />
	      </fileset>
	    </tar>
    </target>
</project>