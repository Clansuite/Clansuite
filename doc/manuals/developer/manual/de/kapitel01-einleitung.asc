////////////////////////////////////////////////////////////////////////////////

This file belongs to "Clansuite - just an eSports CMS" as part of the "Clansuite Documentation".
This file is written in ASCIIDOC format. It's dual-licensed under the GNU Free Documentation License,
Version 1.3 and the Creative Commons Attribution-Share-Alike 3.0 License (cc-by-sa).

You find a comprehensive AsciiDoc User Guide here:
http://www.methods.co.nz/asciidoc/userguide.html

You find an AsciiDoc Sheet Cheat here:
http://powerman.name/doc/asciidoc-compact

For the Clansuite Documentation visit:
http://www.clansuite.com/documentation/

SVN: $Id$

////////////////////////////////////////////////////////////////////////////////

== Kapitel 1 - Einleitung

=== An wen sich dieses Buch richtet

Das Entwicklerhandbuch richtet sich primär an PHP-Entwickler, die das Clansuite CMS und das Clansuite 
Framework erweitern und eigene Module schreiben wollen. Sekundär richtet es sich aber auch an Administratoren, 
die das Clansuite CMS bereits einsetzen und nun den Schritt wagen wollen, Clansuite noch besser an eigene 
Bedürfnisse anzupassen.

Das Buch erklärt, wie Sie eine lokale Entwicklungsumgebung für Clansuite einrichten und welche Werkzeuge und 
Hilfsmittel Sie zum erfolgreichen Entwickeln benötigen. Neben einer ausführlichen Beschreibung aller 
Komponenten des Clansuite Frameworks und einer Erläuterung des Aufbaus des Clansuite CMS werden auch alle 
technischen Standards und Entwurfsmuster des Systems erklärt. Die Plugin- und Modulentwicklung wird jeweils 
anhand eines Beispiels Schritt für Schritt nachvollziehbar dargestellt.

Kurzum: Das Buch ist Pflichtstoff für diejenigen, die Clansuite-Core oder Modulentwickler werden wollen.

Das Clansuite-Projekt lebt davon, dass Entwickler ihre Zeit, Ihr Können und Ihr Wissen dem Projekt widmen. Mit 
dem Entwicklerhandbuch hoffe ich, das notwendige Entwicklerwissen aus erster Hand weitergeben zu können, um 
mit und für Clansuite zu entwickeln.

=== Inhalt und Aufbau des Entwicklerhandbuchs

.Inhalt und Aufbau des Entwicklerhandbuchs
Kapitel 1  - Einleitung::
    Einführende Worte zu Inhalt und Struktur des Entwicklerhandbuchs.
    Zugleich ein Projektüberblick aus Entwicklersicht.
Kapitel 2  - Organisationsstruktur::
    Besprochen werden die Grundprinzipien und Spielregeln für die Zusammenarbeit der Entwickler.
Kapitel 3  - Schnelleinstieg in die Clansuite Entwicklung::
    Beschrieben wird, wie man eine lokale Entwicklungsumgebung für Clansuite einrichtet.
Kapitel 4  - Überblick: grundlegende Orientierung::
    Allgemeine Übersicht und Verzeichnisstruktur von Clansuite.
Kapitel 5  - Das Framework::
    Erläuterung der MVC-Architektur und der einzelnen Bestandteile des Frameworks.
    Definitionen und Erklärungen zu den verwendeten Entwurfsmustern.
Kapitel 6  - Konfigurationseinstellungen::
    Überblick über die Konstanten, Systemvariablen und Einstellungen.
Kapitel 7  - Der Modulaufbau::
    Beschreibung des Modulaufbaus, sowie der automatischen und manuellen Modulerstellung.
Kapitel 8 - Der View: die Templates und das Theme-System::
    Zunächst werden das Clansuite Theme-System und die einzelnen Theme-Engines erklärt.
    Sodann wird auf den Einsatz und die Erstellung von Templates und Layout-Themes eingegangen.
Kapitel 9 - Debugging und Fehlerbehandlung::
    Erklärt werden mehrere Methoden für das Debugging und die Fehlerbehandlung.
Kapitel 10 - Die Erstellung und der Einsatz von Formularen::
    Erstellung und Umgang mit Formularen. Besprochen wird die automatische und     manuelle Formularerstellung, sowie die Formularvalidierung.
Kapitel 11  - Überblick über fremde Bibliotheken::
    Überblick über die fremden Bibliotheken und ihre Einbindung in das CMS.
    Erklärt werden die Systemschnittstellen unter anderem zu Smarty, Phemto und JQuery.
Kapitel 12 - Die Clansuite Toolbar für Mozilla Firefox::
    Besprochen wird die Installation, Verwendung und Programmierung der Clansuite Toolbar.
Kapitel 13 - Das Deployment und der Ablauf eines Clansuite Releases::
    Informationen zum Ablauf der Veröffentlichung von Clansuite.
Kapitel 14 - Testsuite::
    Erläuterungen zum Testing von Clansuite.
Kapitel 15 - Dokumentation::
    Information zur Erstellung der Dokumentation von Clansuite
Kapitel 16 - Der Clansuite Webserver::
    Das Kapitel informiert über die Entwicklung des Clansuite Standalone Webserver Pakets.
Kapitel 17 - Quellcodekonventionen ::
    Das Kapitel informiert über die in diesem Projekt verwendeten Quellcodekonventionen und den Coding-Style.
Anhang A::
    Vollständige Lizenztexte der Dokumentation

=== Zum Umgang mit dem Buch

Das Buch setzt voraus, dass der Leser grundsätzliche Kenntnisse der Programmierung in PHP mitbringt. Clansuite
ist eine objektorientierte Software, daher sind Kenntnisse der objektorientierten Programmierung mit PHP
wünschenswert, aber nicht zwingende Voraussetzung für das Lesen und Verstehen des Buches. Man kann dieses Buch
sowohl in monochron-linearer Lesart lesen, wobei man sich in der Reihenfolge der Kapitel durch das Buch
arbeitet, als auch in polychron-nichtlinearer Lesart, wobei man mehrere Seiten des Entwicklerhandbuchs
zeitgleich im Browser aufschlagen und als Referenz und Nachschlagewerk verwenden kann.

=== Zur Verwendung von deutschen und englischen Fachbegriffen

Das Handbuch verwendet deutsche Fachbegriffe. Bei der ersten Erwähnung eines Fachbegriffs wird der jeweilige englische Fachbegriff angegeben.

=== Warum gibt es das Clansuite Projekt?

[quote, Eric S. Raymond, Die Kathedrale und der Basar (1999), Kapitel. 2: Post muß immer ankommen]
____________________________________________________________________
"Jede gute Software beginnt mit den persönlichen Sehnsüchten eines Entwicklers."
____________________________________________________________________

Dieses Zitat von Eric S. Raymond entstammt dem bekannten Essay über Open-Source-Softwareentwicklung 
"Die Kathedrale und der Basar" (engl. „The Cathedral and the Bazaar“).
footnote:[http://gnuwin.epfl.ch/articles/de/Kathedrale/catb_g.2.html, Raymond 1999, Die Kathedrale und der Basar, Kapitel. 2: Post muß immer ankommen]
Das Zitat gibt zutreffend wieder, warum das das Clansuite Projekt existiert. Denn der Ursprung von Clansuite 
liegt im Bereich der ungelösten Probleme und unbefriedigten Bedürfnisse.

Ausgangspunkt für die Entwicklung von Clansuite war der Einsatz verschiedenster CMS. Viele davon habe ich 
umfangreich modifiziert, um den administrativen Bedürfnissen unseres eSport-Teams besser zu entsprechen und 
uns einige Arbeit abzunehmen. Die dabei entstandenen Ideen und nützlichen Funktionen habe ich im Laufe der 
Zeit an die verschiedenen Clan-CMS Entwicklergemeinschaften herangetragen. Doch diese waren zumeist schlecht 
organisiert und auf unnötige Dinge festgelegt, während Sie zugleich nicht in der Lage waren, bei der 
Entwicklung wichtiger Funktionen mitzuhelfen, oder einfachste Benutzerwünsche oder Fragen zu beantworten. Als 
ich angefangen habe Funktionserweiterungen einzupflegen, habe ich relativ schnell feststellen müssen, dass ich
immer im Randbereich arbeitete und die jeweiligen Grenzen des Systems erreichte.

Zu oft fehlten die Wesentliches leistenden Funktionen, während man sich fehlerbehaftete Entwürfe leistete, auf
welchen man aufbauen sollte. Einige meiner Ideen konnten nicht so einfach umgesetzt werden, wieder andere
landeten viel zu oft in meinem Entwurfsnotizblock. Kurzum, die Unzulänglichkeiten der bestehenden
Programme reizten mich als Programmierer.

Am Ende beschloss ich ganz von vorne anzufangen, und ein dem E-Sport gewidmetes CMS zu erstellen.

Clansuite war geboren.

=== Was will das Clansuite Projekt eigentlich?

Das Projektziel ist die Entwicklung eines gemeinschaftsgetragenen, freien Content Management Systems basierend
auf einem Webanwendungsframework. Dazu setzen wir neueste Internettechnologien ein und konzentrieren uns auf
die wesentlichen Verwaltungsbedürfnisse von eSport-Teams. Einfachheit und Handhabbarkeit stehen sowohl für den
Nutzer als auch für den Entwickler im Vordergrund.

Wer an dieser Stelle ein großes Leitbild oder ein Corporate Mission Statement amerikanischer Art erwartet ist
hier falsch. Um das Ganze in einem kurzen und prägnanten Glaubenssatz zusammenzufassen, können wir nur das
Clansuite Projekt Mantra anbieten (und ja, wir kennen Guy Kawasaki).

Wir wollen Folgendes:

IMPORTANT: Clansuite - just an eSports CMS. - Einfach, komfortabel, schnell, flexibel.
           Ist ein freies, dynamisches und auf einem Framework basierendes Webseitenverwaltungssystem
           insbesondere für Clans und eSport-Teams basierend auf PHP5+, Doctrine, Smarty, Ajax.

Damit ist alles gesagt.

=== Projektüberblick aus Entwicklersicht

Clansuite ist ein einfaches, komfortables, schnelles und flexibles Content Management System. Als Open-Source-
Software kann Clansuite ohne Lizenzkosten eingesetzt werden. Im Vergleich zu Konkurrenzsystemen im 
Marktsegment "Clan und E-Sport CMS" erweist es sich als technisch überlegen. Im Marktsegment "CMS" als 
leistungsstark und durchsetzungsfähig. Diese Positionierung hat Clansuite der zukunftsgerichteten 
objektorientierten Softwarearchitektur zu verdanken und dem geordneten Entwicklungsprozess. Die zahlreichen 
Kommunikationsmittel der Projektinfrastruktur gewährleisten die Anhörung und Einflussnahme der Nutzer und 
sichern die Weiterentwicklung. Clansuite ist an eigene Anforderungen anpassbar und kann nach eigenen 
Vorstellungen weiterentwickelt werden.

Clansuite ist plattformunabhängig. Der Nutzer benötigt einen Webbrowser und einen Internetzugang. Der 
Betreiber benötigt einen Webserver mit MySQL und PHP. Clansuite läuft auf Webservern unter Linux, Solaris, MAC 
OS X und Windows. Beim Aufsetzen der zum Betrieb erforderlichen Software kann auf kostenlose Webserverstacks 
(fertige Pakete) zurückgegriffen werden. Die zusätzlich benötigte Software zur Nutzung und Anpassung von 
Clansuite ist immer auch als Open-Source-Software verfügbar.

Das Clansuite Projekt bietet einen eigenen Webserverstack an. Clansuite wird hier als Teil eines auf „XAMPP 
Lite“ basierenden Webserverstacks ausgeliefert (ClansuiteServer4Win). "XAMPP Lite" ist ein verkleinertes Paket 
des bekannten XAMPP Webservers. Der Clansuite Webserver kann kostenlos von unserer Webseite heruntergeladen 
werden. Er dient Entwicklungszwecken und beinhaltet immer die aktuelle Entwicklerversion.

Clansuite setzt auf neueste Internettechnologien. Eine Aufzählung der Abkürzungen mag verdeutlichen, dass 
moderne Internetanwendungen immer auf einem Technologiemix basieren: HTML, XHTML, CSS, XML, XSLT, JS, AJAX, 
PHP. Um mit diesen Basistechnologien auf einfache Weise umgehen zu können, werden zahlreiche lizenz- und 
technikkompatible Bibliotheken eingesetzt. Sie finden nachfolgend einige Kurzdarstellungen der Technologien. 
Eine genaue Darstellung aller Bibliotheken finden Sie in Kapitel 11.


.PHP 5.2+
Clansuite wird in der serverseitigen Programmiersprache PHP programmiert. Dabei wird gegenwärtig die Version
PHP 5.2.3 zugrunde gelegt. PHP steht für "PHP: Hypertext Preprocessor" oder "Personal Home Page Tools". Es ist
eine Skriptsprache mit einer an C angelehnten Syntax. Man verwendet sie um dynamische Webanwendungen zu
programmieren. Dynamisch bedeutet dabei, dass die früher statischen Webseiten nun durch Nutzung der
Webanwendung direkt verändert werden können. PHP ist Open-Source-Software. Clansuite nutzt die
objektorientierten Features dieser Scriptsprache. Zum Einsatz kommen dabei Standardentwurfsmuster der
objektorientierten Softwareentwicklung.

.CMS und Framework
Das Clansuite-CMS ist als nutzerfreundliche fertige Anwendung gedacht, die lediglich konfiguriert werden muss.
Die Basis des Systems bildet ein objektorientiertes Model-View-Controller-Framework. Das Model-View-Controller
Konzept ist eine Aneinanderreihung von bestimmten objektorientierten Standardentwurfsmustern um eine Trennung
in Applikationsschichten zu erreichen. Die Trennung in Schichten verbessert die Programmierbarkeit des
Systems. Mehr dazu erfahren Sie im Kapitel 5, wo das Framework ausführlich erläutert wird.

.Doctrine (PHP-Bibliothek)
Als PHP-Bibliothek zur Arbeit mit Datenbanken setzt Clansuite auf Doctrine. Doctrine ist ein Werkzeug zur 
objektrelationalen Abbildung von Daten (engl. object-relational mapping, abgekürzt: ORM). Programmiersprachen 
kapseln Daten und Verhalten in Objekten, hingegen legen relationale Datenbanken Daten in Tabellen ab. Unter 
objektrelationaler Abbildung versteht man die Auflösung dieses Strukturwiderspruchs und den 
Überführungsprozess von Daten aus Objekten in eine relationale, regelmäßig tabellarische, Datenstruktur. 
Doctrine verwendet eine mächtige Datenbankenabstraktionschicht (engl. database-abstraction layer, abgekürzt: 
DBAL). Datenbankenabstraktion bedeutet, dass mittels einer Abfragesprache ein breites Spektrum von 
relationalen Datenbanken, die jeweils eine eigene Abfragesprache haben, abgefragt werden kann. Ein besonderes 
Merkmal von Doctrine ist, das Datenbankanfragen in einem eigenen Datenbankenabfragedialekt namens Doctrine 
Query Language (DQL) gestellt werden. Diese Abfragesprache ist SQL-ähnlich und durch den Einsatz verketteter 
objektorientierter Methoden möglich. Aufgegriffen wird ein Ansatz aus der Java-Welt, nämlich Hibernates HQL. 
Doctrine bietet eine mächtige Alternative zum standardmäßigen Einsatz von SQL und bietet Flexibilität ohne das 
Quellcode unnötig wiederholt werden muss.

.Smarty (PHP-Bibliothek)
Smarty ist eine Open-Source Template-Engine für PHP. Im Clansuite Framework von stellt sich Smarty als
das standardmäßig verwendete Hilfsmittel zur Generierung der Präsentation dar. Smarty ist eine kompilierende
Engine. Das bedeutet, das Vorlagedateien nur einmal verarbeitet werden und das erneute Parsen der Vorlagen bei
jedem Seitenaufruf vermieden werden kann. Gleichsam unterstützt Smarty das Caching, wodurch die
Seitenauslieferung beschleunigt stattfinden kann.

.Markupsprachen (XHTML, HTML, CSS)
Die von Clansuite generierten Dokumente setzen verschiedene Markupsprachen, wie HTML und XHTML ein. Die
Formatierung der Dokumente erfolgt mittels Cascading-Stylesheets (CSS).

.Javascript (JS, E4X, jQuery)
Clansuite setzt die clientseitige Scriptsprache JavaScript ein. Seit der JavaScript Version 1.6 enthält JS
auch E4X, welches die Zusammenarbeit von JS mit XML als Datenstruktur vereinfacht. Um die Programmierung zu
vereinfachen, setzt Clansuite die JavaScript-Bibliothek jQuery ein.

.Ajax (JS und XML, JSON)
Ajax ist die Abkürzung der Wortfolge „Asynchronous JavaScript and XML“. Entwickelt wurde AJAX ursprünglich, 
um zu überprüfen, ob ein E-Mail-Postfach neue Post enthält. Es bezeichnet ein Konzept der asynchronen 
Datenübertragung zwischen einem Server und einem Client. Im Webanwendungsumfeld sind es ein Webserver und der 
Webbrowser des Clients. Bei der synchronen Datenübertragung wird eine HTTP-Anfrage vom Webbrowser an den 
Webserver gesendet, woraufhin der Webserver, wenn er über die angefragte Ressource verfügt, einmal mit einer 
vollständigen Antwortseite antwortet. Mittels asynchroner Datenübertragung ist es möglich HTTP-Anfragen 
durchzuführen, während ein HTML-Dokument angezeigt wird. Die HTTP-Abfrage erfolgt mittels Javascript, die 
Antwort mittels XML (häufig auch JSON). Dabei werden lediglich Teile eines Dokuments verändert oder 
aktualisieren. Die Neuheit besteht darin, dass ein vollständiges Laden der Seite unterbleibt und der Nutzer 
der Seite, während die Daten vom Server geladen werden, weiter auf der Webseite arbeiten kann, ohne auf die 
neue Seite warten zu müssen. Die Seiten können so also dynamisch aktualisiert werden. Daher bezeichnet man 
Ajax auch als eine Schlüsseltechnik zur Realisierung des Web 2.0.

.Open-Source Lizenz GNU/GPLv2+
Das Clansuite CMS/CMF unterliegt der GNU General Public License (GPL) Version 2 und (je nach Wahl) jeder 
höheren Version. Die GPL ist eine von der Free Software Foundation (FSF) herausgegebene Lizenz. Das 
Grundanliegen dieses Lizenztyps ist die Sicherung der Freiheit, alle Versionen eines Programms zu teilen und 
zu verändern. Es besteht ein unentgeltliches einfaches Nutzungsrecht für jedermann. Dabei kommt ein von 
Richard Stallman als "Copyleft" betiteltes Prinzip zum Einsatz. Copyleft ist ein Copyright, welches den 
Schutzrechtscharakter quasi umdreht. Statt die Weiterentwicklung eines Softwareprogramms durch starke 
Schutzrechte zu blockieren und andere von der Weiterentwicklung auszuschließen, stellt das Copyleft-Prinzip 
die Freiheit eines Programmes beim Lizenznehmer sicher. Die Bindung jedes weiterentwickelnden Autors an diese 
Lizenz bezeichnet man regelmäßig auch als den "viralen Charakter" der GPL. Clansuite als Werk ist somit nicht 
gemeinfrei (public domain). Immer ist der ursprüngliche Autor auch der Inhaber der Rechte und der Halter des 
Copyrights. Der ursprüngliche Autor oder Inhaber abgetretener Rechte kann das Werk auch unter einer beliebigen 
anderen Lizenz weitergeben.
