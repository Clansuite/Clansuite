////////////////////////////////////////////////////////////////////////////////

This file belongs to "Clansuite - just an eSports CMS" as part of the "Clansuite Documentation".
This file is written in ASCIIDOC format. It's dual-licensed under the GNU Free Documentation License,
Version 1.3 and the Creative Commons Attribution-Share-Alike 3.0 License (cc-by-sa).

You find a comprehensive AsciiDoc UserGuide here:
http://www.methods.co.nz/asciidoc/userguide.html

You find a Ascii Doc SheetCheat here:
http://powerman.name/doc/asciidoc-compact

For the Clansuite Documentation visit:
http://www.clansuite.com/documentation/

SVN: $Id$

////////////////////////////////////////////////////////////////////////////////

== Kapitel 3 - Der Einstieg in die Clansuite Entwicklung

Dieses Kapitel ist eine Anleitung für den Einstieg in die Clansuite-Entwicklung.
Zunächst wird die Einrichtung eines lokalen Entwicklungs-Webservers und das Holen des Clansuite-Quellcodes aus dem SVN-Archiv besprochen.
Dann wird die Einrichtung einer Entwicklungsumgebung und die Installation der Clansuite Community Toolbar erklärt.

Grundlage für die Beschreibungen innerhalb dieses Kapitels ist ein Windows-XP Betriebssystem.
Die Schritte können allerdings denkanalog auf Linux und MAC übertragen werden.

=== Das Einrichten des lokalen Webservers

==== XAMPP
Am einfachsten lässt sich ein Webserver unter Windows installieren, wenn man ein fertiges Webserverpaket verwendet.
So lässt sich beispielsweise das XAMPP-Package von http://www.apachefriends.org/de/xampp.html[Apachefriends.org]
oder das Clansuite Webserverpack verwenden. Dieses Package ist bereits so
eingerichtet, dass es ohne großen Konfigurationsaufwand lauffähig ist. Die normale XAMPP Version, aber auch
der "XAMPP Lite" können eingesetzt werden.
Die Webseite des Apache-Friends Projekts: http://www.apachefriends.org/de/xampp-windows.html

CAUTION: Beachte(!): Die von mir bereitgestellten Konfigurationsdateien beziehen sich immer auf den "xampplite"!

CAUTION: Windows Vista macht manchmal etwas Probleme mit XAMPP, daher solltet Ihr XAMPP auf keinen
Fall unter "C:\Programme" installieren! Bitte wählt ein eigenes Verzeichnis, etwa "C:\xampplite".

TIP: Im Verzeichnis von XAMPP findet man die Datei "xampp-control.exe".
Diese kann in die Taskleiste gezogen werden (drag'n'drop), wo sie dann einen komfortablen Server-Startknopf darstellt.

TIP: Sollte man den Apache Server nicht starten können und zeigt sich immer der Fehlercode: 0xc0150002.
Dann ist das [url=http://www.microsoft.com/downloads/details.aspx?FamilyID=32bc1bee-a3f9-4c13-9c99-220b62a191ee&displaylang=de]Microsoft Visual C++ 2005 Redistributable Package (x86)[/url]
nicht vorhanden und muss zunächst installiert werden.

==== Clansuite Webserverpack für Windows32

==== MySQL einrichten

Wenn der Serverstack läuft dir URL http://localhost/phpmyadmin/ im Webbrowser aufrufen
und einen neuen User mit Passwort anlegen. Diese Daten dann auch bei der Installtion von Clansuite verwenden..

=== Den Clansuite Sourcecode mittels TortoiseSVN aus dem SVN holen

Der Quellcode von Clansuite kann nun aus dem Subversion-Archiv (englisch: Repository) geholt werden.
Das kann einerseits über die Konsole geschehen, andererseits kann ein grafisches Interface für SVN eingesetzt werden.

.a) Das SVN-Userinterface "TortoiseSVN" installieren

Ich rate hier zu "Tortoise SVN". Aber natürlich gibt es auch andere SVN-Userinterfaces, wie z.B.: RapidSVN oder gSVN.
Es ist ein nützliches Standardtool für diese Aufgabe, da es sich in den Explorer einklinkt und dort ein SVN Verwaltungsmenü anbietet.
Bitte achten Sie darauf, je nach Betriebssystem (32bit oder 64bit) die richtige Version herunterzuladen.
Nach der Installation ist gegebenenfalls ein Neustart des Systems notwendig.

Webseite des "Tortoise" Projekts: http://tortoisesvn.net/downloads

.b) Den Clansuite Sourcecode beziehen

Im Datei-Explorer-Kontextmenü (rechte Maustaste) sollte nun "SVN Checkout" und ein Menü mit dem Namen "Tortoise SVN" auftauchen.

Die URLs für den Checkout von Clansuite sind:
svn://svn.gna.org/svn/clansuite/trunk - checkt nur den trunk/head aus
svn://svn.gna.org/svn/clansuite - checkt das ganze Projekt aus

Als Checkout-Directory kann man direkt einen lokalen Webserverpfad nehmen:
C:\xampplite\htdocs\clansuite
Ich verwende ein Verzeichnis namens "work" und lege alle Projekte darin ab:
C:\xampplite\htdocs\work\clansuite

Sobald der Checkout erfolgreich beendet worden ist, steht der Sourcecode im Checkout-Verzeichnis zum
bearbeiten und installieren zur Verfügung. Für die Installation ruft man die URL
einfach http://localhost/clansuite/ oder http://localhost/clansuite/installation auf.
Der Installationsassistent führt Sie dann durch die Installation.

TIP:
Das Verzeichnis "C:\xampplite\htdocs\" entspricht der Browser-URL "http://localhost".
Das Verzeichnis "C:\xampplite\htdocs\work" entspricht der Browser-URL "http://localhost/work/".

TIP:
Man gehe mit dem Explorer in das Verzeichnis "C:\xampplite\htdocs\work\", dort ist "clansuite" enthalten.
Hier nun per Kontextmenü eine "Verknüpfung erstellen" und diese in die Taskleiste ziehen. Hierdurch erhält man einen
sofortigen Sprung in das Entwicklungsverzeichnis.

=== Die Entwicklungsumgebung einrichten

Als Nächstes kann man die Umgebung einrichten. Das Einrichten einer Entwicklungsumgebung kostet Zeit und Mühe
und kann, bis alle Einstellungen bis ins Detail getroffen sind, zu einem Geduldsspiel werden. Am Ende zahlt
sich die Investition sicher aus, dennoch ist der Konfigurationsaufwand, bis alles zufriedenstellend läuft,
frustrierend. In diesem Abschnitt werden daher einige Erfahrungen der Clansuite Entwickler im Umgang mit
Entwicklungswerkzeugen weitergegeben. Beschrieben wird welche Software, warum verwendet und wie diese
Werkzeuge im Zusammenhang mit Clansuite eingesetzten werden.

Im Laufe meiner Entwicklungsarbeit an Clansuite sind mir die unterschiedlichsten Menschen in ihrer Rolle als
Entwickler begegnet. Manche von Ihnen berichteten in regelmäßigen Abständen und mit einigem Stolz, von diesem
und jenem Betriebssystem auf ein anderes gewechselt zu sein. Wieder andere berichteten vom Wechseln von einer
integrierten Entwicklungsumgebung auf die Nächste. Man wechselte fleißig von Aptana zu Eclipse dann zu
Netbeans und wieder zurück. Bei diesen Wechseln geht sehr viel Zeit verloren, die zum Entwickeln nutzbar wäre.
Mich hat es daher wenig gewundert, das produktive Beiträge für das Projekt in Form von SVN-Commits ausblieben.

Oft ist die Wechselmanitis auch mit dem innigen Wunsch verbunden, doch endlich einen Editor zu entdecken, der
einem das Programmieren abnimmt, weil es doch "so komplex" ist. Diese Suche kann ewig dauern. Editoren und
IDE's haben einen ebenso langen Weg der Abstraktion hinter sich, wie die Programmiersprachen, für die sie
Hilfsmittel sind. Sie werden auch immer nur Hilfsmittel eines Entwicklers sein, um Komplexität zu bezwingen
und sich auszudrücken. Man ist Programmierer, wenn man gelernt hat, sich wie ein Programmierer auszudrücken.

Zu einer vernünftigen Entwicklungsumgebung gehören daher auch Bücher und Nachschlagewerke. Sich ein Lehrbuch
über die Programmiersprache PHP und objektorientierte Programmierung anzuschaffen, kann nicht schaden. Die
Lektüre darin ebenso wenig. Hilfreich ist es auch, wenn man eine Sprachreferenz der Programmier- und
Skriptsprachen, die man einsetzt in greifbarer Nähe oder zumindest nur wenige Mausklicks entfernt hat. Die
Ergänzung der Entwicklungsumgebung um die Clansuite Toolbar wirkt hier Wunder. Eine ausführliche Erläuterung
der Toolbar finden Sie in Kapitel 12.

Wer professionell entwickeln möchte, sollte sich eine gleichbleibende Entwicklungsumgebung einrichten und dann
lernen damit wirkungsvoll umzugehen. Sicher ist die Wegfindung, also "wie" und "womit" der Output erzeugt
wird, auch wichtig, aber primär geht es darum, den Output an sich zu erzeugen. Wer diesen, seinen, Weg einmal
gefunden hat, der mag ihn von Zeit zu Zeit wieder verändern. Aber die Zeitspanne bis zu einer Veränderung
sollte so gesetzt werden, dass man in der Zwischenzeit vernünftig arbeiten kann.
Ein ständiges Wechseln der Umgebung ist daher zu vermeiden.

Damit ist nicht gesagt, dass man keine neuen Werkzeuge ausprobieren sollte. Ganz im Gegenteil. In regelmäßigen
Abständen sollte man seine Entwicklungsumgebung dahin gehend überprüfen, ob neue verbesserte Werkzeuge
erhältlich sind. Wenn dies der Fall ist, kann man einen Austausch vornehmen. Dieser Hinweis mag trivial
erscheinen, doch meine Erfahrung bestätigt die Notwendigkeit, auf diesen Umstand hinzuweisen.

==== Webbrowser

Natürlich gehört auch der Webbrowser zur Entwicklungsumgebung. Webbrowser sind als Standardapplikationen für
jede Plattform verfügbar. Clansuite kann mit mehreren Webbrowsern verwendet werden. Im Vordergrund steht dabei
die Entwicklung für Mozilla Firefox und Opera, sowie Safari.

Eine Läuffähigkeit auf dem Mircosoft Internet Explorer ist zu keinem Zeitpunkt angestrebt. Denn das Einpflegen
von Fixes und Patches für IE ist eine nervige Geschichte und der dabei entstehende Flickenteppich lästig.
Neuere Versionen dieses Browsers werden zeigen, ob sich eine Kompatibilität mit Clansuite einstellt.

Wer Mozilla Firefox einsetzt, kann auf zahlreiche Addons für Entwickler zurückgreifen.
Stellvertretend für viele hilfreiche Werkzeuge sind die Web Developer Extension, Firebug sowie YSlow genannt.

.Webdeveloper Tools für Firefox

Firebug:
http://www.getfirebug.com/
https://addons.mozilla.org/de/firefox/addon/1843

FireCookie:
https://addons.mozilla.org/de/firefox/addon/6683

YSlow:
http://developer.yahoo.com/yslow/
https://addons.mozilla.org/de/firefox/addon/5369

FirePHP:
http://www.firephp.org/

Live HTTP Header:
https://addons.mozilla.org/de/firefox/addon/3829

Webdeveloper Toolbar:
http://chrispederick.com/work/web-developer/
https://addons.mozilla.org/de/firefox/addon/60

HTML Validator:
Beinhaltet sowohl den SGML Validator als auch HTML Tidy.
http://users.skynet.be/mgueury/mozilla/

==== Clansuite Toolbar als Firefox-Addon installieren

Um die Entwicklerinstallation wirklich rund zu machen und einen sehr komfortablen Zugriff
auf alle Projektinformationen zu haben, kann man nun noch die Clansuite Community Toolbar herunterladen
und durch "Ausführen mit Firefox" im Browser installieren.
Unter "Optionen" lassen sich die Entwicklermenüs einschalten.

Eine Besonderheit stellen die ersten 4 Links des Menüs "httpd" dar.
Mit ihnen ist es möglich, direkt den virtuellen Host "clansuite-dev.com" im Browser aufzurufen.

"Frontend @ localhost"  ->  "http://www.clansuite-dev.com"
"Admin Control Panel"   ->  "http://www.clansuite-dev.com/?mod=admin"
"Installation"  ->  "http://www.clansuite-dev.com/installation/"
"Web-Installation"  ->  "http://www.clansuite-dev.com/installation/webinstaller/webinstaller.php"

==== VirtualHost

Wer sich den virtuellen Host "www.clansuite-dev.com" lokal einrichtet,
kann später die Schnellverknüpfungen der Clansuite Toolbar nutzen.

Manache fragen sich an dieser Stelle, warum der virtuelle Host nicht "www.clansuite.com" sein darf.
Die Antwort ist einfach. Weil die lokale VHost-Adresse dann den echten Host, mit der Internetseite inklusive Forum,
ersetzen würdeund man folglich keinen Zugang hätte.
Daher wählt man eine "fiktive" oder jedenfalls ungebräuchliche VHost Domain.

Unter "c:\xampplite\apache\conf\extra" findet man die Datei "httpd-vhosts.conf".
In dieser Datei kann manuell der Vhost "ServerName clansuite-dev.com",
sowie "ServerAlias www.clansuite-dev.com" hinzugefügt werden.
Alternativ kann die Datei einfach mit meiner Version aus dem SVN ersetzt werden.
Die entsprechende Datei gibts hier: http://svn.gna.org/svn/clansuite/trunk/build-tools/xampp/httpd-vhosts.conf

Damit das System diese URL auf den lokalen Server umleitet, muss noch die "hosts"-Datei
im Verzeichnis "c:\windows\system32\drivers\etc\hosts" angepasst werden.
Man trage "127.0.0.1 clansuite-dev.com" sowie "127.0.0.1 www.clansuite-dev.com" ein,
um eine entsprechende URL-Namensauflösung zum localhost zu erhalten.
Alternativ kann auch meine Datei aus dem SVN geholt werden:
http://svn.gna.org/svn/clansuite/trunk/build-tools/xampp/hosts

==== Xdebug - als PHP-Debugger und Profiler einbinden

Download
Falls "php_xdebug.dll" nicht vorhanden ist, dann von http://xdebug.org/ downloaden.
Entsprechend umbenennen und ins Verzeichnis "C:\xampplite\php\ext" ablegen.

XDebug in der php.ini einschalten
In "c:\xampplite\apache\php.ini" nach "xdebug" suchen.

Wichtig ist, nicht die alte Methode zum Laden der Webservererweiterung zu verwenden.
Alte Versionen von XDebug wurden mittels "extension=php_xdebug.dll" geladen.
Diese Art und Weise des Ladens der Debugging-Erweiterung führt jedoch zu erheblichen Problemen.
Dies liegt daran, dass XDebug, wenn es als normales Modul des Webservers läuft, nicht auf alle
Sichtbarkeitsbereiche der Zend Engine zugreifen kann.
Stellen Sie also zunächst sicher, dass "extension=php_xdebug.dll" auskommentiert ist.
Die Auskommentierung wird durch voranstellen eines Semikolon erreicht (";extension=php_xdebug.dll").

Eine neuere und bessere Methode der Einbindung ist daher XDebug als Erweiterung der Zend Engine zu laden.
Dies kann durch "zend_extension_ts = "c:\xampplite\php\ext\php_xdebug.dll" erreicht werden.
Hierfür ist der Zend Extension Manager zu aktivieren. Dies kann durch hinzufügen der Zeile
zend_extension_ts = "C:\xampp\php\zendOptimizer\lib\ZendExtensionManager.dll" erfolgen.
Zu beachten ist die Inkompatibilität mit der Zend Erweiterung "Zend Optimizer".
Zend Optimizer durch Auskommentieren der entsprechenden Zeilen zu deaktiveren.
Um dies zu tun, kann nach der Zeichenfolge "zend_extension_manager.optimizer_ts" in der php.ini gesucht werden.
Zend Optimizer ist eine Laufzeitbibliothek, die den Quellcode vor der Kompilierung optimiert um somit eine Beschleunigung erzielen.

Eine ausführliche Anleitung zum Thema "Wie installiere ich XDebug?" findet sich in Kapitel 16 (Der Webserver).

==== Dokumentationswerkzeuge

.AsciiDoc + Python
Für die automatische Erstellung der Dokumentation auf einem Windowssystem wird AsciiDoc und deshalb auch Python benötigt.
AsciiDoc: http://www.methods.co.nz/asciidoc/
Python: http://www.python.org/ftp/python/2.5.1/python-2.5.1.msi

Für die SourceCode-Highlighting Features von AsciiDoc wird zusätzlich das "src-highlite" Paket des GNU
Projekts benötigt.
http://gnuwin32.sourceforge.net/

.gettext
Für die automatische Erstellung der Übersetzungsdateien bzw. das Auslesen von zu übersetzenden Texten sind die
gettext Tools hilfreich.
http://www.gnu.org/software/gettext

.poEdit
Die Sprachdateien von Clansuite können auch mit einem externen Editor bearbeitet und übersetzt werden.
poEdit eignet sich hervorragend für diese Aufgabe.
http://www.poedit.net/

==== Einfache Texteditoren

.Notepad++
Notepad++ ist ein Open-Source Texteditor.
Er bietet Syntax-Highlightning und alle Funktionen, die zur Bearbeitung von PHP- und HTML- und CSS-Dateien
erforderlich sind.
http://notepad-plus.sourceforge.net/de/site.htm

.WinMerge
WinMerge ist ein Open-Source-Werkzeug zum Vergleichen zweier Dateien und zum Feststellen von Versionsunterschieden.
http://winmerge.org/

.KommodoEdit
Komodo Edit ist ein kostenloser komfortabler Editor.
http://www.activestate.com/komodo_edit

.Liste mit PHP-Editoren
* http://www.php-editors.com/
* http://en.wikipedia.org/wiki/List_of_PHP_editors/
* http://free-php-editor.com/

==== Integrierte Entwicklungsumgebungen (IDEs)

Integrierte Entwicklungsumgebungen beherrschen zumeist eine Reihe fortschrittlicher Techniken, um Entwickler
zu unterstützen. Dazu gehören automatisches Quelltextfolding, automatische Quellcodevervollständigung und das
vorlagenbasierte Erstellen von Quellcodeabschnitten. Auch eine Kontexterkennung von verfügbaren Methoden und
Variablen unter Auswertung des DocBlocks und die Anzeige als Code-Hint ist oft verfügbar.

.Netbeans
Eine in Java geschriebene Open-Source IDE für Windows, Linux, Mac OS X und Solaris.
http://netbeans.org/

.Eclipse
Eine in Java geschriebene integrierte Entwicklungsumgebung die professionellen Ansprüchen genügt.
http://www.eclipse.org/
Es gibt zahlreiche Plugins und Addons unter:
http://www.eclipseplugincentral.com/.
Insbesondere gibt es ein Eclipse-Paket namens PHP Development Tools (PDT) welches speziell für PHP-Entwickler zusammengestellt wurde.
http://www.eclipse.org/pdt/

.QuantaPlus
Q+ ist eine IDE für Linux. Sie ist Teil der KDE Webdevlopement Tools.
http://kdewebdev.org/
http://quanta.kdewebdev.org/

==== SQL und Datenbankenwerkzeuge

.phpMyAdmin
phpMyAdmin ist eine freie PHP-Applikation und in den meisten Webserverstacks bereits als Verwaltungswerkzeug für MySQL-Datenbanken enthalten.
http://www.phpmyadmin.net/

.HeidiSQL
HeidiSQL ist ein sehr einfaches grafisches Verwaltungswerkzeug für MySQL Datenbanken.
Es wird von Ansgar Becker (http://www.anse.de/) in Delphi entwickelt.
http://www.heidisql.com/

.MySQL Workbench Community Edition
http://www.mysql.de/products/workbench/

.SQL Buddy
http://sqlbuddy.com/

==== Allgemeine Werkzeuge

.Putty
PuTTY ist ein Werkzeug zur Verwaltung von SSH-Keys unter Windows-Systemen und ein telnet Client.
http://www.putty.org/
http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html

.WinSCP
WinSCP ist ein grafisches SFTP, FTP Werkzeug. Es unterstüzt das SCP-Protokoll und die Verwendung von geschützten SSH-Verbindungen (Tunneling).
http://winscp.net/

.Filezilla
Ein Open-Source Standardwerkzeug für Dateitransfers mittels File-Transfer-Protocol (FTP).
Download: http://filezilla-project.org/

=== Subversion (SVN) - Sourcecode-Versionswerwaltung

==== Wie kann man mit mehreren Entwicklern effizent SourceCode gleichzeitig bearbeiten?

* Man stellt eine zentrale Verwaltung aller Quelltext-Dateien zur Verfügung.
  (Zugriff steuerbar, zB: Lesen für jedermann, Schreiben nur für Entwickler.)
* Man hält zu jeder Datei, nicht nur die zuletzt gespeicherte Version vor, sondern auch alle früheren.
  Demnach lassen sich Änderungen an der Datei sehr einfach verfolgen, denn jede Übermittlung einer
  Dateiänderung erzeugt eine neue Version.
* Bei paralleler Bearbeitung und anschließender Speicherung kommt es zu einem Versionskonflikt.
  Dieser kann durch Zusammenführung der beiden Dateiinhalte ausgeglichen werden.

==== Wie ist das Subversion Archiv aufgebaut?

Das Versionsverwaltungsarchiv auf dem Server wird auch "repository" genannt.
Die Arbeitskopie auf dem eigenen Rechner nennt man "working copy".

Es hat sich als zweckmäßig erwiesen folgende Struktur zu verwenden:

[source, txt]
---------------------------------------------------------------------
/branches - Ast : ermöglicht Weiterentwicklung in einem extra Bereich, bei Erfolg wird "branch" in "trunk" eingefügt
/tags - Ablagebereich für benannte Versionen, z. B. Produkt X Version alpha
/trunk - Stamm : Hauptentwicklungsbereich
---------------------------------------------------------------------

Versionangaben:
"revision" - gibt das Archiv mit der jeweiligen Version wieder, zB rev 1 = erste Version
"head" - gibt das Archiv in der aktuellsten Version

==== Der Arbeitsablauf mit Subversion

Wie läuft das nun genau ab?
Es lassen sich 3 Arbeitsschritte benennen. Das Holen, das Aktualisieren und das Hochladen.

.Das Holen - Checkout
Zunächst werden alle Daten vom Server geholt.
Diesen Vorgang bezeichnet man als "checkout". Es ist der Erstbezug des Quellcodes.
Dadurch wird eine lokale Arbeitskopie erzeugt.

.Das Aktualisieren - Update
Neuerungen auf dem Server kann man mittels "update" in die lokale Arbeitskopie einpflegen. So hält man die
"working copy" auf dem neuesten Stand. Sollte eine lokale Datei jedoch verändert worden sein, wird ein
Zusammenführen der alten (lokalen) und neuen (server-repos) ermöglicht.
Diesen Vorgang nennt man "mergen", im Sinne einer Versionsverbindung.

.Das Hochladen - Commit
Mittels "commit" werden die lokal durchgeführten Veränderungen an das zentrale Repository übertragen und
erzeugen dort eine neue Revisionsnummer (den Head, die aktuellste verfügbare Version),
wenn die Serverdateien nicht zwischenzeitlich selbst geändert worden sind.
Falls zwischenzeitlich eine Veränderung des Archivs durch einen anderen Entwickler erfolgt ist,
wird ein Zusammenführen (das sogennte "mergen") der eigenen lokalen Datei und der Serverdatei ermöglicht.
Hiernach stehen alle Änderungen allen anderen Entwicklern zur Verfügung.

=== Der Zugriff auf das Clansuite Subversion Archiv

Das Clansuite Subersion Repository liegt auf dem Server von "http://gna.org".

==== Welche Zugriffsmöglichkeiten gibt es?

Es gibt 2 Zugriffsarten auf das SVN: (A) öffentlich (anonym) und (B) privat (registriert).

Der "öffentliche" Zugriff steht jedem zur Verfügung.

Der "private" Zugriff erfordert die Erstellung eines Nutzerkontos bei GNA.
Dazu ist die Hinterlegung des SSH-Keys auf dem Gna-Server und die Aktivierung der verschlüsselten
Verbindung auf dem lokalen Rechner erforderlich.

Dabei kann die Generierung des Keys für die Verschlüsselung über "puttygen" erfolgen.
Die lokale Aktivierung des Verbindungstunnel kann mittels "Pageant" durchgeführt werden.
Beide Anwendungen sind Bestandteil des Programmpakets "putty".

==== Womit kann ich das am besten machen?

Für beide bietet sich als SVN Verwaltungsprogramm "TortoiseSVN" an.
Du kannst es über diesen Link downloaden: Tortoise SVN Downloads.

=== (A) Der öffentliche Zugriff ( für Nicht-Mitglieder des Projekts )

Der öffentliche SVN Zugriff steht jedermann zur Verfügung.
Die Verbindungs-Urls für das Clansuite SVN lautet: http://svn.gna.org/svn/clansuite/trunk
Du kannst sie direkt in Tortoise Checkout einfügen, ein Zielverzeichnis angeben und es erfolgt ein
Checkout (das Holen der Dateien, siebe oben) des Trunk (aktuellste Version, siehe oben).
Oder als Konsolenbefehl für SVN: svn co http://svn.gna.org/svn/clansuite/trunk clansuite

=== (B) Privater Zugriff (für Clansuite Projekt Mitglieder)

Der "private" Zugriff erfordert
(1) die Erstellung eines Nutzerkontos bei GNA,
(2) die Hinterlegung des SSH-Keys auf dem Gna-Server und die Aktivierung der verschlüsselten Verbindung
auf dem lokalen Rechner. Dabei erfolgt die Generierung des Keys über "puttygen".
Die lokale Aktivierung mittels "Pageant". Beide Anwendungen kommen mit "putty".

.Schritt 1: Bei Gna.org registrieren
Wenn Du mitmachen möchtest und Code commiten willst, dann lege Dir zunächst ein Benutzerkonto bei GNA an.
Die Seite mit der Benutzerkontoanzeige kannst Du im Browser geöffnet lassen, wir brauchen sie gleich nochmal.

.Schritt 2: Für sichere Verbindung zum GNA Server sorgen
Jetzt ist es an der Zeit sich um eine sichere Verbindung von Deinem Rechner zum GNA Server zu kümmern.
Das erfolgt in drei kleineren Schritten:
(1) Als erstes erstellst Du dir einen öffentlcihen SSH-Schlüssel, zu dem nur Du das Passwort kennst.
(2) Diesen hinterlegst Du dann auf dem GNA Server.
(3) Danach aktivierst Du diesen Schlüssel lokal und gibst das Passwort ein.

(1) Öffentlichen Schlüssel erstellen

Einen öffentlichen Schlüssel erstellst Du mit dem Programm "puttygen".
"Puttygen" wird mit "Putty" installiert und liegt dann im Installationspfad von "Putty", wo Du es aufrufen kannst.

Putty Website 
http://www.chiark.greenend.org.uk/~sgtatham/putty/

Download: Latest Putty Installer
http://tartarus.org/~simon/putty-snapshots/x86/putty-installer.exe

Download: Putty 0.60 Installer
http://the.earth.li/~sgtatham/putty/latest/x86/putty-0.60-installer.exe

Wenn Du "puttygen" gestartet hast, gehst Du auf "Generate Key". (Parameterhinweis: SSH2-RSA 1024)
Zu diesem Schlüssel gibst Du nun Dein Passwort (Keyphrase) ein.
Um Tippfehler auszuschließen gibst Du es nochmals ein.

Jetzt hast Du einen SSH-Schlüssel mit Passwort. Du speicherst sowohl "Private" als auch "Public" Schlüssel ab.

(2) Schlüssel bei GNA hinterlegen

Um den Schlüssel bei GNA zu hinterlegen kopierst Du den kompletten Inhalt (vom ersten bis zum letzten Zeichen)
der Schlüsselanzeige (das oberste Formularfeld) aus "Puttygen" in die Zwischenablage.

Das Browserfenster mit der Benutzerkontoanzeige bei GNA ist noch geöffnet und Du gehst auf SSH-Keys hinzufügen.
Alternativ kannst Du diesen Link verwenden: https://gna.org/my/admin/editsshkeys.php , wenn Du noch angmeldet bist.

Rest erklärt sich von selbst: den Inhalt der Zwischenablage in ein Schlüssel-Inputfeld einfügen.
Saven und fertig: Schlüssel ist bei GNA hinterlegt. (Beispiel: ssh-rsa AAAAblalba123blabla==)

(Zusatzinformation: Damit dieser Schlüssel für das SVN auf dem GNA Server aktiv wird, muss erst die
Rechtetabelle aktualisiert werden. Der Eintrag mittels CronJob dauert zwischen 30 und 60 Minuten.
Also später nicht wundern, dass man nicht sofort gesichert zugreifen kann.)

(3) Schlüssel lokal aktivieren

Um den Schlüssel nun für jeden Kommunikationsvorgang mit dem GNA Server zur Hand zu haben, startest Du das
Programm "Pageant" (im "Putty" Verzeichnis) und lädst den abgespeicherten Public Private Key
(öffentlicher privater Schlüssel). Die Dateiendung ist PPK. Alternativ kannst Du den Key doppelklicken,
wenn Pageant mit der PPK Endung verknüpft ist, sollte es starten.

Es öffnet sich ein Fenster zur Eingabe Deines Passworts.

Nach erfolgreicher Eingabe taucht in der Taskleiste neben der Uhr ein Symbol "PC mit Hut" auf.
Du kannst hier per "rechts-klick" und "View Keys" prüfen, ob der Key auch geladen wurde.

Wenn dieses Symbol angezeigt wird und der Key hinterlegt ist, kann Dein Rechner über eine
SSH-Verbindung gesichert mit dem GNA Server kommunizieren.

==== Wie ist die Checkout-URL für Projektmitglieder?

Die Checkouts müssen im folgenden Format getätigt werden, damit später Commits den jeweiligen Usern
zugeordnet, sowie die SSH Keys abgeglichen werden können:

<membername> ist durch den GNA Nickname zu ersetzen!

Checkout-URL des Trunk (Copy/Paste für Tortoise SVN)
svn+ssh://<membername>@svn.gna.org/svn/clansuite/trunk
Hinweis: Bei bei Revision #2350 waren rund 100 MB Festplattenplatz erforderlich.

Checkout des Trunk in das Verzeichnis /clansuite per Konsole:
svn co svn+ssh://<membername>@svn.gna.org/svn/clansuite/trunk clansuite

==== Wie bekomme ich das gesamte Repository?

Wenn Du "svn+ssh://<membername>@svn.gna.org/svn/clansuite/" als Checkout URL verwendest, 
bekommst Du das gesamte Archiv.

Vorsicht: 
Das holt alle branches, tags und zusätzliches Entwicklermaterial und kann recht platzgreifend sein!
Bei Revision #2350 waren rund 280 MB Festplattenplatz erforderlich.

==== Wie bekomme ich nur einen Teil des Repositories?

Wenn Du "svn+ssh://<membername>@svn.gna.org/svn/clansuite/"+unterpfad als Checkout URL verwendest,
bekommst Du alle Dateien unterhalb des angegebenen Unterpfades.

Beispiele:

Du arbeitest nur an der Dokumentation:
svn+ssh://<membername>@svn.gna.org/svn/clansuite/trunk/docs

Du arbeitest nur an der GNA-Webpage:
svn+ssh://<membername>@svn.gna.org/svn/clansuite/website

==== Für Linux

1. Schlüssel erstellen
ssh-keygen -t dsa -b 1024 -C <comment>

2. Wo finde ich den Schlüssel?
Der Schlüssel wird im Verzeichnis des Benutzers abgelegt: ~/.ssh/id_dsa.pub.

3. Schlüssel aus "id_dsa.pub" bei Gna eintragen
Danach ne gute Stunde abwarten, bis der GNA-Cronjob den neuen Schlüssel aufgenommen hat.
https://gna.org/my/admin/editsshkeys.php

4. SSH Verbindung prüfen (Connection Check).
ssh -v <membername>@svn.gna.org
Hier müsste eine Fehlermeldung kommen, denn die Anmeldung an der Console ist nicht gestattet.

5. SVN-Checkout
svn co svn+ssh://<membername>@svn.gna.org/svn/clansuite/trunk