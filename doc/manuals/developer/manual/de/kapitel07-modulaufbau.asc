////////////////////////////////////////////////////////////////////////////////

This file belongs to "Clansuite - just an eSports CMS" as part of the "Clansuite Documentation".
This file is written in ASCIIDOC format. It's dual-licensed under the GNU Free Documentation License,
Version 1.3 and the Creative Commons Attribution-Share-Alike 3.0 License (cc-by-sa).

You find a comprehensive AsciiDoc UserGuide here:
http://www.methods.co.nz/asciidoc/userguide.html

You find a Ascii Doc SheetCheat here:
http://powerman.name/doc/asciidoc-compact

For the Clansuite Documentation visit:
http://www.clansuite.com/documentation/

SVN: $Id$

////////////////////////////////////////////////////////////////////////////////

== Kapitel 7 - Der Modulaufbau

Das Kapitel erläutert den Aufbau eines Clansuite Moduls.
Ein Entwicklungsziel von Clansuite war, den Application Layer so zu gestalten, dass sich Module schnell und
einfach schreiben und anpassen lassen. Im Vordergrund steht die Konzentration von Methoden und Eigenschaften
in der allgemeinen Klasse Clansuite_Modulecontroller. Jeder Modulcontroller erweitert die Klasse
Clansuite_Modulecontroller. Damit stehen die allgemeinen Methoden und Eigenschaften dieser Klasse jedem
Modulcontroller zur Verfügung. Unnötige Quelltextdopplung in den Modulen wird so vermieden und ein Modul,
sowie insbesondere eine Modulaction, besteht nur noch aus den wichtigsten Informationen.

.Überblick über die Methoden und Eigenschaften von Clansuite_Modulecontroller

.Methoden für den Umgang mit dem Model

.Methoden Für den Umgang mit dem View

Wird kein Layouttemplate mittels setLayoutTemplate() gesetzt, wird der Methodenname automatisch als Templatename eingesetzt.
Eine Action namens "action_admin_show" hat daher das Template "action_admin_show.tpl".

# Set Layout Template $this->getView()->setLayoutTemplate('index.tpl');

# Prepare the Output $this->prepareOutput();

== Der Inhalt eines Modulverzechnisses

=== Die Informationsdatei (modulename.info.php)

Die "modulename.info.php" Datei stellt Clansuite Metainformationen des Moduls zur Verfügung. Die
Metainformationen werden z. B. im Bereich der Moduleverwaltung angezeigt, um das Modul korrekt zu
identifizieren. Die Datei folgt der Dateinamenskonventions "modulename"+".info.php". Das Dateiformat ist das
normale .ini Format. Die Dateiendung ist aus Sicherheitsgründen zwingend ".php". Die Einträge sind
Schlüssel/Wert Paare. Sie werden durch das Zeichen "=" getrennt. Wenn man die Werte in Anführungeszeichen (")
setzt, dann ist es auch möglich Zeilenumbrüche einzufügen. Es ist ebenfalls möglich Kommentare einzufügen.
Dazu wird das Semikolon der zu kommentierenden Zeile vorangestellt. Aus Sicherheitsgründen ist es ebenfalls
wichtig, dass die ersten Zeilen der Konvention entsprechen.

=== Die Routingdatei eines Moduls (modulename.routes.php)

Die Routingdatei namens "modulename.routes.php" enthält eine Auflösungstabelle für die URL Action Paare. Ein
solches Paar besteht auf Schlüsselseite aus einer URL und ihren Teilelementen, auf der Wertseite aus den
passende Methodenaufrufen des jeweiligen Modulcontrollers. Damit definieren Routes also sogenannte Resourcen-
Zielseiten. Diese Relationstabelle kann man sich wie eine Sitemap des Moduls vorstellen. Je Modul wird eine
URLs Auflösungstabelle geführt. Bei der Installation werden sie mit der Hauptauflösungstabelle des Systems
verschmolzen. So wird beim Systemstart eine einzige Definitionsdatei namens "clansuite.routes.php" für das
Routing geladen. Eine Veränderung des Modulroutings führt zu einer automatischen Anpassung des allgemeinen
Routings.

=== Die Controllerdateien

Clansuite unterstützt zwei Arten von Controllern.
Einerseits Modulecontroller. Diese Dateien stellen eine Bündelung von ActionControllern dar.
Andererseits ActionController. Diese Dateien stellen einzelne Kommandos/Tasks dar.

=== Erweiterung eines Moduls zur Laufzeit (Module-Plugins)

Ein Modul kann zur Laufzeit des Programms, um weitere Methoden, also ActionController ergänzt werden.
Um dies durchzuführen, wird der Moduldecorator eingesetzt.