////////////////////////////////////////////////////////////////////////////////

This file belongs to "Clansuite - just an eSports CMS" as part of the "Clansuite Documentation".
This file is written in ASCIIDOC format. It's dual-licensed under the GNU Free Documentation License,
Version 1.3 and the Creative Commons Attribution-Share-Alike 3.0 License (cc-by-sa).

You find a comprehensive AsciiDoc UserGuide here:
http://www.methods.co.nz/asciidoc/userguide.html

You find a Ascii Doc SheetCheat here:
http://powerman.name/doc/asciidoc-compact

For the Clansuite Documentation visit:
http://www.clansuite.com/documentation/

SVN: $Id$

////////////////////////////////////////////////////////////////////////////////

== Dokumentation

.Kapitelüberblick

Dieses Kapitel beschreibt die eingesetzten Werkzeuge und das Verfahren zur Erstellung der Clansuite Dokumentation.

=== Allgemeines zur Dokumentation

Die Dokumentation ist bekanntermaßen das ungeliebte Kind jedes Entwicklers. Zumeist werden Programme
abgeliefert, ohne auch nur eine einzige Zeile Programmcode im Quelltext oder die Benutzung des Programms in
Form eines Handbuchs dokumentiert zu haben. Neben der Dokumentation des Quelltextes im Quelltext selbst sollte
auch eine beigefügte Dokumentation jede Komponente erklären.

Unabhängig von der Sprache, in der die Dokumentation erstellt wird, sollte immer eine Korrekturlesung
stattfinden. Rechtschreibprüfungen helfen dabei, aber um die Grammatik muss man sich selbst kümmern.
Schreibfehler und Falschbezeichnungen sind nicht nur unansehnlich. Sie auch können verheerende Folgen haben,
insbesondere bei Variablennamen.

.Überblick über unsere Dokumentationswerkzeuge

1. AsciiDoc und po4a
2. Trac Wiki
3. phpDocumentor
4. phpXref

=== AsciiDoc und po4a

.Allgemeines
Wir verwenden AsciiDoc für die automatisierte Erstellung der Dokumentation aus Textdateien. Das hat zwei
Vorzüge: zum einen wird durch Dokumentation mittels einfacher Textdateien gewährleistet, dass die
Dokumentation auf jedem System lesbar ist. Zum anderen, dass es problemlos möglich ist, die Dokumentationen in
verschiedene Dokumentationsformate, wie z. B. Plain-Text, PDF oder XHTML zu konvertieren. Die Textdateien für
AsciiDoc befinden sich im Verzeichnis "/doc/manuals" und haben die Dateiendung ".asc".

.Wie funktioniert AsciiDoc?
Der Kern von AsciiDoc ist ein Pythonscript zur Konvertierung von Textdateien in andere Formate. Dabei werden
die drei Formate "article", "book", "manpage" von Haus aus unterstützt. Über eine Konfigurationsdatei können
weitere Formate wie DocBook XML, XHTML 1.1, HTML 4.01 ausgegeben werden.

Wählt man als Ausgabeformat beispielsweise DocBook XML, so wird AsciiDoc den hauseigenen DocBook Toolchain
Wrapper "a2x" verwenden, um in einem ersten Schritt, den unstrukturierten Text in strukturiertes XML
umzuwandeln. Hat man dies erreicht, kann in einem weiteren Schritt, die gesamte Vielfalt der Ausgabeformate
von DocBook angesprochen werden. Dabei wird das XML zumeist mittels XSLT-Processing (xsltproc) mit einem
entsprechenden DocBook XSL Stylesheet versehen und anschließend ausgegeben. Auf diese Weise lassen sich aus
den Textdateien auch PostScript oder PDF Dokumente erzeugen. Dieses mehrschrittige Verfahren erschließt
letztlich die volle Kraft von DocBook, wobei dessen eigentliche Komplexität vor dem Nutzer versteckt wird. Die
Eintrittsbarriere in die Technik der automatischen Erstellung von Dokumentationen wird deutlich herabgesetzt
und auf das Wesentliche, den Inhalt, konzentriert.

.Übersetzung der Dokumentation
Die Ausgangssprache der Dokumentation ist Deutsch. Die Übersetzung in andere Sprachen erfolgt durch Verwendung
von po4a. Das Ziel des po4a (po for anything) Werkzeugs ist, den Einsatzbereich des bekannten Gettext PO
Formats und der Gettext Tools auf untypische Einsatzbereiche auszudehnen. Regelmäßig wird Gettext für die
Lokalisierung von Software herangezogen, wobei hier eher kürzere Textabschnitt der Nutzerschnittstelle
(Beschriftungen, Menüs, Meldungen, Statuszeilentexte) übersetzt werden. Besonders interessant wird der Einsatz
des Übersetzungswerkzeugs Gettext im Bereich der Dokumentation von Software aber nicht durch die längeren
Textabschnitte einer Dokumentation, denn Gettext ist durchaus in der Lage auch lange Übersetzungstexte zu
handhaben, sondern durch die verbesserte Wartbarkeit und Pflege der Übersetzungsdateien. So gibt es zahlreiche
Werkzeuge um den Übersetzungsfortschritt statistisch zu erfassen und grafisch darzustellen, sowie die
Aktualisierungsnotwendigkeit bzw. Übersetzungsnotwendigkeit anzuzeigen.

Dazu extrahiert PO4A das zu übersetzende Material aus den Text- bzw. XML-Eingangsdaten und legt eine PO-Datei
an. (http://www.gnu.org/software/hello/manual/gettext/PO-Files.html) Die Inhalte der PO Dateien können durch
Zuhilfenahme von Gettext-Übersetzungseditoren, wie z. B. POEdit, sehr einfach übersetzt werden. Nach der
Übersetzung der PO-Datei in die jeweilige Zielsprache wird der Übersetzungsgehalt in die Dokumentenstruktur
der Eingangsdaten eingepflegt, wodurch das übersetzte Dokument entsteht. Sollte eine Zeichenkette nicht oder
lediglich teilübersetzt sein, weil z. B. das Ausgangsdokument zwischenzeitlich verändert wurde, dann wird die
Zeichenkette der Ausgangssprache im übersetzten Dokument verwendet. Dies ermöglicht neu hinzugekommene
Passagen in der fremdsprachigen Version des Dokuments schnell und einfach zu erkennen, zu übersetzen und somit
die Dokumentation up to date zu halten.

Die automatisch generierte Dokumentation ist immer online zu finden:
http://www.clansuite.com/documentation/

.Formatierungsregeln
Die Formatierungsregeln für AsciiDoc sind sehr einfach gehalten. Man kann sich die Auszeichnungssprache als
eine Art Wiki-Markup vorstellen, welches durch eine Vielzahl von Kommando-"Tags" erweitert wird. Der Fokus
liegt eindeutig auf der Erstellung von Text und Inhalt und nicht auf dem Abplagen müssen mit endlosen HTML-
und CSS-Tag-Kaskaden oder der Dokumentenbeschreibung im DocBook-Stil. Den offiziellen Leitfaden für die
Formatierungsregeln findet man auf Webseite des AsciiDoc Projekts. Den durch die Community erstellten Cheat
Sheet (engl. für Spickzettel) findet man hier unter der URL http://powerman.name/doc/asciidoc.
Die Formatierungsregeln werden durch bestimmte Filter erweitert.

.Die Erweiterung Source-highlight
Der Filter source-highlight verwendet gnu-highlight um in den Text eingebetteten Quellcode farbig hervorzuheben
und somit die Lesbarkeit des Quellcodes zu Verbessern.

.Die Erweiterung graphvit
Der Filter graphviz ermöglicht die Erstellung von Diagrammen auf Basis der Grafikbeschreibungssprache Dot.
Man zeichnet also keine Diagramme und schon gar nicht per Hand oder direkt mit einer Software,
sondern beschreibt sie abstrakt. Das konkrete Layout übernimmt dann Graphviz bzw. Dot.
Eine Assoziation die sich unmittelbar aufdrängt, ist HTML als Beschreibungssprache für Webseiten.
Hier wird ebenfalls abstrakt beschrieben, wobei das konkrete Layout vom Layoutverständnis-Browser abhängt.

http://www.graphviz.org
http://www.4webmaster.de/wiki/Graphviz-Tutorial

Nachfolgend finden Sie die Webseite des AsciiDoc Projekts: http://www.methods.co.nz/asciidoc/

=== Trac Wiki

Eine Dokumentation mittels des Trac Wiki wird derzeit nicht durchgeführt. Im Trac Wiki lassen sich daher
hauptsächlich Hinweise zum Eintragen von Wünschen (Feature-Requests) und Fehlern (Bugs) finden.

Nachfolgend finden Sie die Webseite des Clansuite Trac Wikis:
http://trac.clansuite.com/

=== phpDocumentor - PHP Documentation Generator

Die Clansuite API wird durch phpDocumentor automatisch dokumentiert. Dazu parsed phpDocumentor zunächst den
Quellcode von Clansuite und analysiert anschließend Quellcode und zugehörige Kommentare. Um den
Informationsgehalt der Kommentare zu erhöhen, wird der phpDoc-Kommentarstil eingesetzt. Welche phpDocumentor
Blöcke und Tags im Clansuite Quellcode verwendet werden, erfahren Sie im Kapitel über die
Programmierkonventionen.

Nachfolgend finden Sie die Webseite und das Handbuch des phpDocumentor Projekts:
http://www.phpdoc.org/
http://manual.phpdoc.org/

=== phpXRef - PHP Cross Referencing Documentation Generator

Die Clansuite API wird durch phpXRef automatisch dokumentiert. Dazu parsed phpXRef zunächst den Quellcode von
Clansuite und analysiert anschließend Quellcode und zugehörige Kommentare.

Nachfolgend finden Sie die Webseite des phpDocumentor Projekts: http://phpxref.sourceforge.net/