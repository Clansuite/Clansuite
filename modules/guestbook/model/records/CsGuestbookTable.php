<?php

/**
* This class has been auto-generated by the Doctrine ORM Framework
*/
class CsGuestbookTable extends Doctrine_Table
{
    public static function fetchAllGuestbookEntries($currentPage, $resultsPerPage, $admin = null, $sortorder = null)
    {
        if($sortorder == null)
        {
            $sortorder = 'n.guestbook_id DESC, n.created_at DESC'; 
        }        
        
        # create public or administration link
        if($admin == null)
        {   
            # link for public area       
            $link =  '?mod=guestbook&amp;action=show&amp;page={%page}';    
        }
        else 
        {
            # link for administration area
            $link = '?mod=guestbook&amp;sub=admin&amp;action=show&amp;page={%page}';
        }
        
        // read * db -> $guestbook_entries
            $pager_layout = new Doctrine_Pager_Layout(
                                new Doctrine_Pager(
                                    Doctrine_Query::create()
                                            ->select('g.*')
                                            ->from('CsGuestbook g')
                                            ->orderby($sortorder),
                                             # The following is Limit  ?,? =
                                             $currentPage, // Current page of request
                                             $resultsPerPage // (Optional) Number of results per page Default is 25
                                     ),
                                     new Doctrine_Pager_Range_Sliding(array(
                                         'chunk' => 5
                                     )),
                                     '?mod=guestbook&sub=admin&action=show&page={%page}'
                                     );
    
        # Sets Layout of the pager links
        $pager_layout->setTemplate('[<a href="{%url}">{%page}</a>]');

        # Sets Layout of the pager
        $pager_layout->setSelectedTemplate('[{%page}]');

        # Retrieving Doctrine_Pager instance
        $pager = $pager_layout->getPager();

        # fetching the paginated guestbook
        $guestbook_entries = $pager->execute(array(), Doctrine::HYDRATE_ARRAY);

        # put things in an array-box for delivery of multiple things with one return stmt
        return compact('guestbook_entries', 'pager', 'pager_layout');
    } 
}  
?>