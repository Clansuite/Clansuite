<?php
// Connection Component Binding
//Doctrine_Manager::getInstance()->bindComponent('CsNews', 'clansuite');

/**
 * BaseCsNews
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $news_id
 * @property string $news_title
 * @property string $news_body
 * @property integer $cat_id
 * @property integer $user_id
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $news_status
 * 
 * @package    Clansuite
 * @subpackage Database
 * @author     Clansuite - just an eSports CMS <vain at clansuite dot com>
 * @version    SVN: $Id$
 */
abstract class BaseCsNews extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('cs_news');
        $this->hasColumn('news_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('news_title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('news_body', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('cat_id', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('created_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('updated_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('news_status', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();

        # Doctrine Behaviour: Timestampable
        $this->actAs('Timestampable'); # created_at, modified_at
        
        # Doctrine Behaviour: Searchable
        $this->actAs('Searchable', array(
                            'fields' => array('news_title', 'news_body')
                        ));

        $this->index('user_id', array('fields' => 'user_id'));
        $this->hasOne('CsUsers', array(
                            'local' => 'user_id',
                            'foreign' => 'user_id'
                            #,
                            #'onDelete' => 'CASCADE')
                        ));


        $this->index('cat_id', array('fields' => 'cat_id'));
        $this->hasOne('CsCategories', array(
                            'local' => 'cat_id',
                            'foreign' => 'cat_id'
                            #,
                            #'onDelete' => 'CASCADE')
                        ));

        $this->index('news_id', array('fields' => 'news_id'));
        $this->hasMany('CsComments', array(
                            'local' => 'news_id',
                            'foreign' => 'comment_id',
                            'refClass' => 'CsRelNewsComments'#,
                            #'onDelete' => 'CASCADE')
                        ));

    }
}